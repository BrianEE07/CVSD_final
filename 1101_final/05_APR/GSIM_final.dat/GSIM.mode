catch { setDesignMode -process 130 }
catch { setAnalysisMode -analysisType bcwc }
catch { setAnalysisMode -checkType setup }
catch { setAnalysisMode -clkSrcPath true }
catch { setAnalysisMode -clockGatingCheck true }
catch { setAnalysisMode -clockPropagation sdcControl }
catch { setAnalysisMode -cppr both }
catch { setAnalysisMode -enableMultipleDriveNet true }
catch { setAnalysisMode -log true }
catch { setAnalysisMode -sequentialConstProp false }
catch { setAnalysisMode -skew true }
catch { setAnalysisMode -timeBorrowing true }
catch { setAnalysisMode -timingSelfLoopsNoSkew false }
catch { setAnalysisMode -usefulSkew true }
catch { setAnalysisMode -useOutputPinCap true }
catch { setAnalysisMode -virtualIPO false }
catch { setAnalysisMode -warn true }
catch { setOptMode -activeSetupViews { av_func_mode_max } }
catch { setOptMode -autoSetupViews { av_func_mode_max} }
catch { setOptMode -autoTDGRSetupViews { av_func_mode_max} }
catch { setOptMode -deleteInst true }
catch { setOptMode -drcMargin 0 }
catch { setOptMode -fixCap true }
catch { setOptMode -fixDrc true }
catch { setOptMode -fixFanoutLoad true }
catch { setOptMode -fixTran true }
catch { setOptMode -optimizeFF true }
catch { setOptMode -preserveAllSequential false }
catch { setOptMode -setupTargetSlack 0 }
catch { setPathGroupOptions reg2reg -effortLevel high -weight 2 }
catch { setPathGroupOptions reg2out -effortLevel low }
catch { setPathGroupOptions in2reg -effortLevel low }
catch { setPathGroupOptions in2out -effortLevel low }
catch { setExtractRCMode  -engine postRoute -total_c_th 0 -relative_c_th 1 -coupling_c_th 0.4 -minNetTermNrToBeInMem 50 }
catch {setNanoRouteMode -quiet -drouteAntennaFactor 1.000000}
catch {setNanoRouteMode -quiet -droutePostRouteSpreadWire "auto"}
catch {setNanoRouteMode -quiet -drouteStartIteration 0}
catch {setNanoRouteMode -quiet -drouteUseMinSpacingForBlockage auto}
catch {setNanoRouteMode -quiet -extractThirdPartyCompatible false}
catch {setNanoRouteMode -quiet -grouteExpTdStdDelay 35.200000}
catch {setNanoRouteMode -quiet -grouteExpTdUseTifTimingEngineForImportDesign true}
catch {setNanoRouteMode -quiet -routeAntennaCellName "ANTENNA"}
catch {setNanoRouteMode -quiet -routeInsertAntennaDiode true}
catch {setNanoRouteMode -quiet -routeStrictlyHonorNonDefaultRule "false"}
catch {setNanoRouteMode -quiet -routeTdrEffort 10}
catch {setNanoRouteMode -quiet -routeWithEco true}
catch {setNanoRouteMode -quiet -routeWithSiDriven true}
catch {setNanoRouteMode -quiet -routeWithSiPostRouteFix false}
catch {setNanoRouteMode -quiet -routeWithTimingDriven true}
catch {setNanoRouteMode -quiet -timingEngine ""}

catch { setPlaceMode -MXPBoundaryLevel 7 }
catch { setPlaceMode -MXPConstraintFile {} }
catch { setPlaceMode -MXPControlSetting 0 }
catch { setPlaceMode -MXPLogicHierAware 0 }
catch { setPlaceMode -MXPPreplaceSetting 5 }
catch { setPlaceMode -MXPRefineSetting 17 }
catch { setPlaceMode -place_global_place_io_pins false }
catch { setPlaceMode -timingDriven true }
catch { setIlmMode -keepHighFanoutPorts true -keepLoopBack false -keepFlatten true }
catch { setPlanDesignMode -boundaryPlace true }
catch { setPlanDesignMode -effort high }
catch { setPlanDesignMode -fixPlacedMacros false }
catch { setPlanDesignMode -incremental false }
catch { setPlanDesignMode -noColorize false }
catch { setUsefulSkewMode -ecoRoute false }
catch { setSrouteMode -viaConnectToShape {ring stripe blockring} }
catch { setDelayCalMode -enable_high_fanout true }
catch { setDelayCalMode -eng_copyNetPropToNewNet true }
catch { setDelayCalMode -engine aae }
catch { setDelayCalMode -ignoreNetLoad false }
catch { setDelayCalMode -SIAware true }
catch { setPinAssignMode -pinEditInBatch false }
catch { setAddRingMode -avoid_short false }
catch { setAddRingMode -extend_over_row false }
catch { setAddRingMode -ignore_rows false }
catch { setAddRingMode -orthogonal_only true }
catch { setAddRingMode -ring_target default }
catch { setAddRingMode -skip_crossing_trunks none }
catch { setAddRingMode -skip_via_on_pin standardcell }
catch { setAddRingMode -skip_via_on_wire_shape noshape }
catch { setAddRingMode -stacked_via_bottom_layer METAL1 }
catch { setAddRingMode -stacked_via_top_layer METAL8 }
catch { setAddRingMode -via_using_exact_crossover_size true }
catch { setHierMode -disableArt false }
catch { setHierMode -reportPostRouteArtTiming false }
catch { setHierMode -trialRouteHonorReadOnly false }
catch { setImportMode -config true }
catch { setImportMode -discardFloatingVNets false }
catch { setImportMode -keepEmptyModule true }
catch { setSIMode -separate_delta_delay_on_data true }
catch { setAddStripeMode -allow_jog {padcore_ring block_ring} }
catch { setAddStripeMode -break_at none }
catch { setAddStripeMode -extend_to_closest_target none }
catch { setAddStripeMode -ignore_block_check false }
catch { setAddStripeMode -ignore_nondefault_domains false }
catch { setAddStripeMode -orthogonal_only true }
catch { setAddStripeMode -partial_set_thru_domain false }
catch { setAddStripeMode -route_over_rows_only false }
catch { setAddStripeMode -rows_without_stripes_only false }
catch { setAddStripeMode -skip_via_on_pin standardcell }
catch { setAddStripeMode -skip_via_on_wire_shape noshape }
catch { setAddStripeMode -spacing_from_block 0 }
catch { setAddStripeMode -spacing_type edge_to_edge }
catch { setAddStripeMode -split_vias false }
catch { setAddStripeMode -stacked_via_bottom_layer METAL1 }
catch { setAddStripeMode -stacked_via_top_layer METAL8 }
catch { setAddStripeMode -stop_at_last_wire_for_area false }
catch { setAddStripeMode -stripe_min_length stripe_width }
catch { setAddStripeMode -trim_antenna_back_to_shape none }
catch { setAddStripeMode -via_using_exact_crossover_size false }
catch { setFPlanMode -defaultTechSite TSM13SITE }
catch { setFPlanMode -maxIoHeight false }
catch { setFPlanMode -powerRailLayer {} }
catch { setStreamOutMode -SEvianames false }
catch { setStreamOutMode -snapToMGrid false }
catch { setStreamOutMode -specifyViaName default }
catch { setStreamOutMode -streamVersion 5 }
catch { setStreamOutMode -textSize 1 }
catch { setStreamOutMode -uniquifyCellNamesPrefix false }
catch { setStreamOutMode -virtualConnection false }
